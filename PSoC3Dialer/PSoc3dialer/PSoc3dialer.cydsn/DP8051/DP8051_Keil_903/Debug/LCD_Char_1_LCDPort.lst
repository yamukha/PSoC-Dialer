C51 COMPILER V9.03   LCD_CHAR_1_LCDPORT                                                    07/11/2012 14:12:38 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE LCD_CHAR_1_LCDPORT
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_903\Debug\LCD_Char_1_LCDPort.obj
COMPILER INVOKED BY: D:\dev_soft\PSoC Creator\2.0\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe .\Generated_Source\
                    -PSoC3\LCD_Char_1_LCDPort.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_903\Debug\LCD_Char_1_LCDPort.lst) CD DB 
                    -NOIP OT(2,SIZE) INCDIR(Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_903\Debug\LCD_Char_1_LCDPort.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: LCD_Char_1_LCDPort.c  
   3          * Version 1.50
   4          *
   5          * Description:
   6          *  This file contains API to enable firmware control of a Pins component.
   7          *
   8          * Note:
   9          *
  10          ********************************************************************************
  11          * Copyright 2008-2010, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include "cytypes.h"
  18          #include "LCD_Char_1_LCDPort.h"
  19          
  20          
  21          /*******************************************************************************
  22          * Function Name: LCD_Char_1_LCDPort_Write
  23          ********************************************************************************
  24          * Summary:
  25          *  Assign a new value to the digital port's data output register.  
  26          *
  27          * Parameters:  
  28          *  prtValue:  The value to be assigned to the Digital Port. 
  29          *
  30          * Return: 
  31          *  void 
  32          *  
  33          *******************************************************************************/
  34          void LCD_Char_1_LCDPort_Write(uint8 value) 
  35          {
  36   1          uint8 staticBits = LCD_Char_1_LCDPort_DR & ~LCD_Char_1_LCDPort_MASK;
  37   1          LCD_Char_1_LCDPort_DR = staticBits | ((value << LCD_Char_1_LCDPort_SHIFT) & LCD_Char_1_LCDPort_MASK);
  38   1      }
  39          
  40          
  41          /*******************************************************************************
  42          * Function Name: LCD_Char_1_LCDPort_SetDriveMode
  43          ********************************************************************************
  44          * Summary:
  45          *  Change the drive mode on the pins of the port.
  46          * 
  47          * Parameters:  
  48          *  mode:  Change the pins to this drive mode.
  49          *
  50          * Return: 
  51          *  void
  52          *
  53          *******************************************************************************/
C51 COMPILER V9.03   LCD_CHAR_1_LCDPORT                                                    07/11/2012 14:12:38 PAGE 2   

  54          void LCD_Char_1_LCDPort_SetDriveMode(uint8 mode) 
  55          {
  56   1              CyPins_SetPinDriveMode(LCD_Char_1_LCDPort_0, mode);
  57   1              CyPins_SetPinDriveMode(LCD_Char_1_LCDPort_1, mode);
  58   1              CyPins_SetPinDriveMode(LCD_Char_1_LCDPort_2, mode);
  59   1              CyPins_SetPinDriveMode(LCD_Char_1_LCDPort_3, mode);
  60   1              CyPins_SetPinDriveMode(LCD_Char_1_LCDPort_4, mode);
  61   1              CyPins_SetPinDriveMode(LCD_Char_1_LCDPort_5, mode);
  62   1              CyPins_SetPinDriveMode(LCD_Char_1_LCDPort_6, mode);
  63   1      }
  64          
  65          
  66          /*******************************************************************************
  67          * Function Name: LCD_Char_1_LCDPort_Read
  68          ********************************************************************************
  69          * Summary:
  70          *  Read the current value on the pins of the Digital Port in right justified 
  71          *  form.
  72          *
  73          * Parameters:  
  74          *  void 
  75          *
  76          * Return: 
  77          *  Returns the current value of the Digital Port as a right justified number
  78          *  
  79          * Note:
  80          *  Macro LCD_Char_1_LCDPort_ReadPS calls this function. 
  81          *  
  82          *******************************************************************************/
  83          uint8 LCD_Char_1_LCDPort_Read(void) 
  84          {
  85   1          return (LCD_Char_1_LCDPort_PS & LCD_Char_1_LCDPort_MASK) >> LCD_Char_1_LCDPort_SHIFT;
  86   1      }
  87          
  88          
  89          /*******************************************************************************
  90          * Function Name: LCD_Char_1_LCDPort_ReadDataReg
  91          ********************************************************************************
  92          * Summary:
  93          *  Read the current value assigned to a Digital Port's data output register
  94          *
  95          * Parameters:  
  96          *  void 
  97          *
  98          * Return: 
  99          *  Returns the current value assigned to the Digital Port's data output register
 100          *  
 101          *******************************************************************************/
 102          uint8 LCD_Char_1_LCDPort_ReadDataReg(void) 
 103          {
 104   1          return (LCD_Char_1_LCDPort_DR & LCD_Char_1_LCDPort_MASK) >> LCD_Char_1_LCDPort_SHIFT;
 105   1      }
 106          
 107          
 108          /* If Interrupts Are Enabled for this Pins component */ 
 109          #if defined(LCD_Char_1_LCDPort_INTSTAT) 
              
                  /*******************************************************************************
                  * Function Name: LCD_Char_1_LCDPort_ClearInterrupt
                  ********************************************************************************
                  * Summary:
                  *  Clears any active interrupts attached to port and returns the value of the 
C51 COMPILER V9.03   LCD_CHAR_1_LCDPORT                                                    07/11/2012 14:12:38 PAGE 3   

                  *  interrupt status register.
                  *
                  * Parameters:  
                  *  void 
                  *
                  * Return: 
                  *  Returns the value of the interrupt status register
                  *  
                  *******************************************************************************/
                  uint8 LCD_Char_1_LCDPort_ClearInterrupt(void) 
                  {
                      return (LCD_Char_1_LCDPort_INTSTAT & LCD_Char_1_LCDPort_MASK) >> LCD_Char_1_LCDPort_SHIFT;
                  }
              
              #endif /* If Interrupts Are Enabled for this Pins component */ 
 131          
 132          
 133          /* [] END OF FILE */ 
C51 COMPILER V9.03   LCD_CHAR_1_LCDPORT                                                    07/11/2012 14:12:38 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _LCD_Char_1_LCDPort_Write (BEGIN)
                                           ; SOURCE LINE # 34
0000 900000      R     MOV     DPTR,#value
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 36
0005 905120            MOV     DPTR,#05120H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 5480              ANL     A,#080H
000D FF                MOV     R7,A
000E 900000      R     MOV     DPTR,#staticBits
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 37
0013 900000      R     MOV     DPTR,#value
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 547F              ANL     A,#07FH
001B FF                MOV     R7,A
001C 900000      R     MOV     DPTR,#staticBits
001F E0                MOVX    A,@DPTR
0020 FE                MOV     R6,A
0021 EF                MOV     A,R7
0022 4E                ORL     A,R6
0023 FF                MOV     R7,A
0024 905120            MOV     DPTR,#05120H
0027 EF                MOV     A,R7
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 38
0029 22                RET     
             ; FUNCTION _LCD_Char_1_LCDPort_Write (END)

             ; FUNCTION _LCD_Char_1_LCDPort_SetDriveMode (BEGIN)
                                           ; SOURCE LINE # 54
0000 900000      R     MOV     DPTR,#mode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 56
0005 900000      R     MOV     DPTR,#mode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 540E              ANL     A,#0EH
000D FF                MOV     R7,A
000E 905010            MOV     DPTR,#05010H
0011 E0                MOVX    A,@DPTR
0012 FE                MOV     R6,A
0013 EE                MOV     A,R6
0014 54F1              ANL     A,#0F1H
0016 FE                MOV     R6,A
0017 EE                MOV     A,R6
0018 4F                ORL     A,R7
0019 FF                MOV     R7,A
001A 905010            MOV     DPTR,#05010H
C51 COMPILER V9.03   LCD_CHAR_1_LCDPORT                                                    07/11/2012 14:12:38 PAGE 5   

001D EF                MOV     A,R7
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 57
001F 900000      R     MOV     DPTR,#mode
0022 E0                MOVX    A,@DPTR
0023 FF                MOV     R7,A
0024 EF                MOV     A,R7
0025 540E              ANL     A,#0EH
0027 FF                MOV     R7,A
0028 905011            MOV     DPTR,#05011H
002B E0                MOVX    A,@DPTR
002C FE                MOV     R6,A
002D EE                MOV     A,R6
002E 54F1              ANL     A,#0F1H
0030 FE                MOV     R6,A
0031 EE                MOV     A,R6
0032 4F                ORL     A,R7
0033 FF                MOV     R7,A
0034 905011            MOV     DPTR,#05011H
0037 EF                MOV     A,R7
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 58
0039 900000      R     MOV     DPTR,#mode
003C E0                MOVX    A,@DPTR
003D FF                MOV     R7,A
003E EF                MOV     A,R7
003F 540E              ANL     A,#0EH
0041 FF                MOV     R7,A
0042 905012            MOV     DPTR,#05012H
0045 E0                MOVX    A,@DPTR
0046 FE                MOV     R6,A
0047 EE                MOV     A,R6
0048 54F1              ANL     A,#0F1H
004A FE                MOV     R6,A
004B EE                MOV     A,R6
004C 4F                ORL     A,R7
004D FF                MOV     R7,A
004E 905012            MOV     DPTR,#05012H
0051 EF                MOV     A,R7
0052 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 59
0053 900000      R     MOV     DPTR,#mode
0056 E0                MOVX    A,@DPTR
0057 FF                MOV     R7,A
0058 EF                MOV     A,R7
0059 540E              ANL     A,#0EH
005B FF                MOV     R7,A
005C 905013            MOV     DPTR,#05013H
005F E0                MOVX    A,@DPTR
0060 FE                MOV     R6,A
0061 EE                MOV     A,R6
0062 54F1              ANL     A,#0F1H
0064 FE                MOV     R6,A
0065 EE                MOV     A,R6
0066 4F                ORL     A,R7
0067 FF                MOV     R7,A
0068 905013            MOV     DPTR,#05013H
006B EF                MOV     A,R7
006C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 60
006D 900000      R     MOV     DPTR,#mode
0070 E0                MOVX    A,@DPTR
C51 COMPILER V9.03   LCD_CHAR_1_LCDPORT                                                    07/11/2012 14:12:38 PAGE 6   

0071 FF                MOV     R7,A
0072 EF                MOV     A,R7
0073 540E              ANL     A,#0EH
0075 FF                MOV     R7,A
0076 905014            MOV     DPTR,#05014H
0079 E0                MOVX    A,@DPTR
007A FE                MOV     R6,A
007B EE                MOV     A,R6
007C 54F1              ANL     A,#0F1H
007E FE                MOV     R6,A
007F EE                MOV     A,R6
0080 4F                ORL     A,R7
0081 FF                MOV     R7,A
0082 905014            MOV     DPTR,#05014H
0085 EF                MOV     A,R7
0086 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 61
0087 900000      R     MOV     DPTR,#mode
008A E0                MOVX    A,@DPTR
008B FF                MOV     R7,A
008C EF                MOV     A,R7
008D 540E              ANL     A,#0EH
008F FF                MOV     R7,A
0090 905015            MOV     DPTR,#05015H
0093 E0                MOVX    A,@DPTR
0094 FE                MOV     R6,A
0095 EE                MOV     A,R6
0096 54F1              ANL     A,#0F1H
0098 FE                MOV     R6,A
0099 EE                MOV     A,R6
009A 4F                ORL     A,R7
009B FF                MOV     R7,A
009C 905015            MOV     DPTR,#05015H
009F EF                MOV     A,R7
00A0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 62
00A1 900000      R     MOV     DPTR,#mode
00A4 E0                MOVX    A,@DPTR
00A5 FF                MOV     R7,A
00A6 EF                MOV     A,R7
00A7 540E              ANL     A,#0EH
00A9 FF                MOV     R7,A
00AA 905016            MOV     DPTR,#05016H
00AD E0                MOVX    A,@DPTR
00AE FE                MOV     R6,A
00AF EE                MOV     A,R6
00B0 54F1              ANL     A,#0F1H
00B2 FE                MOV     R6,A
00B3 EE                MOV     A,R6
00B4 4F                ORL     A,R7
00B5 FF                MOV     R7,A
00B6 905016            MOV     DPTR,#05016H
00B9 EF                MOV     A,R7
00BA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 63
00BB 22                RET     
             ; FUNCTION _LCD_Char_1_LCDPort_SetDriveMode (END)

             ; FUNCTION LCD_Char_1_LCDPort_Read (BEGIN)
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
C51 COMPILER V9.03   LCD_CHAR_1_LCDPORT                                                    07/11/2012 14:12:38 PAGE 7   

0000 905121            MOV     DPTR,#05121H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 547F              ANL     A,#07FH
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
                                           ; SOURCE LINE # 86
000B         ?C0003:
000B 22                RET     
             ; FUNCTION LCD_Char_1_LCDPort_Read (END)

             ; FUNCTION LCD_Char_1_LCDPort_ReadDataReg (BEGIN)
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 103
                                           ; SOURCE LINE # 104
0000 905120            MOV     DPTR,#05120H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 547F              ANL     A,#07FH
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
                                           ; SOURCE LINE # 105
000B         ?C0004:
000B 22                RET     
             ; FUNCTION LCD_Char_1_LCDPort_ReadDataReg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    254    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
